name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # 触发事件：每次推送到 main 分支

jobs:
  build:
    runs-on: ubuntu-latest  # 在 Ubuntu 环境中运行

    steps:
      # Step 1: Checkout 代码
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: 设置 Docker Buildx（用于构建 Docker 镜像）
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Docker Hub 登录（通过 GitHub Secrets 存储 Docker Hub 用户名和访问令牌）
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      # Step 4: 构建 Docker 镜像
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/myapiapp:latest .

      # Step 5: 推送 Docker 镜像到 Docker Hub
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/myapiapp:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build  # 确保部署是在构建之后执行

    steps:
      # Step 6: Checkout 代码
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 7: 部署到阿里云服务器
      - name: Deploy Docker image to Alibaba Cloud server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SERVER_IP }} << 'EOF'
            docker pull ${{ secrets.DOCKER_USERNAME }}/myapiapp:latest
            docker stop myapiapp-container || true
            docker rm myapiapp-container || true
            docker run -d --name myapiapp-container -p 80:80 ${{ secrets.DOCKER_USERNAME }}/myapiapp:latest
          EOF
